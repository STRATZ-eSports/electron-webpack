{"version":3,"sources":["../../src/targets/RendererTarget.ts"],"names":[],"mappings":"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","sourcesContent":["import { outputFile } from \"fs-extra-p\"\nimport { Lazy } from \"lazy-val\"\nimport * as path from \"path\"\nimport { getConfig } from \"read-config-file\"\nimport { DefinePlugin } from \"webpack\"\nimport { getDllAssets } from \"../configurators/dll\"\nimport { configureVueRenderer } from \"../configurators/vue/vue\"\nimport { WebpackConfigurator } from \"../main\"\nimport { statOrNull } from \"../util\"\nimport { BaseTarget, configureFileLoader } from \"./BaseTarget\"\n\nconst MiniCssExtractPlugin = require(\"mini-css-extract-plugin\")\n\nexport class BaseRendererTarget extends BaseTarget {\n  constructor() {\n    super()\n  }\n\n  configureRules(configurator: WebpackConfigurator): void {\n    super.configureRules(configurator)\n\n    configurator.rules.push(\n      {\n        test: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/,\n        use: {\n          loader: \"url-loader\",\n          options: configureFileLoader(\"imgs\")\n        }\n      },\n      {\n        test: /\\.(mp4|webm|ogg|mp3|wav|flac|aac)(\\?.*)?$/,\n        loader: \"url-loader\",\n        options: configureFileLoader(\"media\"),\n      },\n      {\n        test: /\\.(woff2?|eot|ttf|otf)(\\?.*)?$/,\n        use: {\n          loader: \"url-loader\",\n          options: configureFileLoader(\"fonts\")\n        }\n      },\n    )\n\n    if (configurator.hasDevDependency(\"ejs-html-loader\")) {\n      configurator.rules.push({\n        test: /\\.ejs$/,\n        loader: \"ejs-html-loader\",\n      })\n    }\n\n    if (configurator.hasDependency(\"vue\")) {\n      configureVueRenderer(configurator)\n    }\n    else {\n      configurator.rules.push({\n        test: /\\.(html)$/,\n        use: {\n          loader: \"html-loader\",\n        }\n      })\n    }\n  }\n\n  async configurePlugins(configurator: WebpackConfigurator): Promise<void> {\n    configurator.debug(\"Add ExtractTextPlugin plugin\")\n    configurator.plugins.push(new MiniCssExtractPlugin({filename: `${configurator.type === \"renderer-dll\" ? \"vendor\" : \"styles\"}.css`}))\n\n    // https://github.com/electron-userland/electrify/issues/1\n    if (!configurator.isProduction) {\n      configurator.plugins.push(new DefinePlugin({\n        \"process.env.NODE_ENV\": \"\\\"development\\\"\",\n      }))\n    }\n\n    await BaseTarget.prototype.configurePlugins.call(this, configurator)\n  }\n}\n\nexport class RendererTarget extends BaseRendererTarget {\n  constructor() {\n    super()\n  }\n\n  async configurePlugins(configurator: WebpackConfigurator): Promise<void> {\n    // not configurable for now, as in the electron-vue\n    const customTemplateFile = path.join(configurator.projectDir, \"src/index.ejs\")\n    const HtmlWebpackPlugin = require(\"html-webpack-plugin\")\n    const nodeModulePath = configurator.isProduction ? null : path.resolve(configurator.projectDir, \"node_modules\")\n    const assets = process.env.ELECTRON_WEBPACK_STATIC_DIR || \"static\"\n\n    configurator.plugins.push(new HtmlWebpackPlugin({\n      filename: \"index.html\",\n      template: (await statOrNull(customTemplateFile)) == null ? (await generateIndexFile(configurator, nodeModulePath)) : customTemplateFile,\n      minify: false,\n      nodeModules: nodeModulePath\n    }))\n\n    if (configurator.isProduction) {\n      configurator.plugins.push(new DefinePlugin({\n        __static: `\"${path.join(configurator.projectDir, assets).replace(/\\\\/g, \"\\\\\\\\\")}\"`\n      }))\n    }\n    else {\n      const contentBase = [path.join(configurator.projectDir, assets), path.join(configurator.commonDistDirectory, \"renderer-dll\")]\n      configurator.config.devServer = {\n        contentBase,\n        host: process.env.ELECTRON_WEBPACK_WDS_HOST || \"localhost\",\n        port: process.env.ELECTRON_WEBPACK_WDS_PORT || 9080,\n        hot: true,\n        overlay: true,\n      }\n    }\n\n    await BaseRendererTarget.prototype.configurePlugins.call(this, configurator)\n  }\n}\n\nasync function computeTitle(configurator: WebpackConfigurator): Promise<string | null | undefined> {\n  const titleFromOptions = configurator.electronWebpackConfiguration.title\n  if (titleFromOptions == null || titleFromOptions === false) {\n    return null\n  }\n\n  if (titleFromOptions !== true) {\n    return titleFromOptions\n  }\n\n  let title: string | null | undefined = (configurator.metadata as any).productName\n  if (title == null) {\n    const electronBuilderConfig = await getConfig<any>({\n      packageKey: \"build\",\n      configFilename: \"electron-builder\",\n      projectDir: configurator.projectDir,\n      packageMetadata: new Lazy(() => Promise.resolve(configurator.metadata))\n    })\n    if (electronBuilderConfig != null) {\n      title = electronBuilderConfig.result.productName\n    }\n  }\n\n  if (title == null) {\n    title = configurator.metadata.name\n  }\n  return title\n}\n\nasync function generateIndexFile(configurator: WebpackConfigurator, nodeModulePath: string | null) {\n  // do not use add-asset-html-webpack-plugin - no need to copy vendor files to output (in dev mode will be served directly, in production copied)\n  const assets = await getDllAssets(path.join(configurator.commonDistDirectory, \"renderer-dll\"), configurator)\n  const scripts: Array<string> = []\n  const css: Array<string> = []\n  for (const asset of assets) {\n    if (asset.endsWith(\".js\")) {\n      scripts.push(`<script type=\"text/javascript\" src=\"${asset}\"></script>`)\n    }\n    else {\n      css.push(`<link rel=\"stylesheet\" href=\"${asset}\">`)\n    }\n  }\n\n  const title = await computeTitle(configurator)\n  const filePath = path.join(configurator.commonDistDirectory, \".renderer-index-template.html\")\n  await outputFile(filePath, `<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    ${title == null ? \"\" : `<title>${title}</title>`}\n    <script>\n      ${nodeModulePath == null ? \"\" : `require(\"module\").globalPaths.push(\"${nodeModulePath.replace(/\\\\/g, \"/\")}\")`}\n      require(\"source-map-support/source-map-support.js\").install()\n    </script>\n    ${scripts.join(\"\")}\n  ${css.join(\"\")}\n  </head>\n  <body>\n    <div id=\"app\"></div>\n  </body>\n</html>`)\n\n  return `!!html-loader?minimize=false!${filePath}`\n}\n"],"sourceRoot":""}
